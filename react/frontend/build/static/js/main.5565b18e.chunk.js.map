{"version":3,"sources":["Navigation.js","Home.jsx","Button.jsx","Utils.js","Accounts.js","Login.js","Verify.js","LoginPage.js","Questions.js","QuestionsPage.js","Media.js","SearchPage.js","Users.js","Routes.js","serviceWorker.js","index.js"],"names":["NavBar","loginButton","console","log","this","props","loggedIn","react_default","a","createElement","Navigation_MyLink","className","to","style","flexGrow","Navigation_SearchBar","action","React","Component","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","value","handleChange","bind","assertThisInitialized","search","event","setState","target","e","preventDefault","onSubmit","type","onChange","MyLink","react_router_dom","textDecoration","children","Home","postQuestion","history","push","skip","location","skipFirstRender","QuestionLink","id","CreateAccountForm","username","email","password","notification","createAccount","name","defineProperty","sendObj","me","fetch","method","credentials","mode","cache","headers","Content-Type","body","JSON","stringify","then","response","json","status","pathname","msg","error","SuccessNewAccountPage","withRouter","LoginForm","redirect","login","VerifyForm","key","verifyAccount","VerifyPage","verifyForm","LoginPage","getLoginStatus","setLoginState","catch","Accounts","Login","LogoutPage","AddQuestionForm","newQuestionPage","addQuestion","tagsArray","mediaArray","tags","split","media","title","success","questionId","finally","newQuestionLink","Utils_QuestionLink","QuestionPage","_this2","user","score","view_count","answer_count","timestamp","accepted_answer_id","answers","refresh_visible","answerAdded","deleteQuestion","refresh","getData","vote","newState","match","params","question","errorMessage","upvote","refreshButton","mediaDisplay","_this3","onClick","length","map","mediaId","src","reputation","Questions_AddAnswerForm","callback","Questions_Answers","Answers","_this4","_this5","answer","Fragment","Questions_Answer","is_accepted","acceptAnswer","Answer","accepted","AddAnswerForm","_this6","addAnswer","addQuestionForm","questionPage","QuestionsPage","MediaPage","Media_AddMediaForm","AddMediaForm","addMedia","files","file","formData","FormData","append","SearchPage","SearchPage_SearchForm","SearchForm","limit","query","sort","searchResults","checked","parseInt","q","sort_by","filter","element","has_media","questions","resultsContent","SearchPage_SearchResult","step","SearchResult","UsersPage","getUser","UserPage","userProfile","userQuestionsDisplay","userAnswersDisplay","answerId","usersPage","LoginStatus","justChanged","Navigation_NavBar","react_router","exact","path","render","Home_Home","assign","SearchPage_SearchPage","Accounts_SuccessNewAccountPage","LoginPage_LoginPage","LoginPage_LogoutPage","component","QuestionsPage_QuestionsPage","Media_MediaPage","Users_UserPage","Boolean","window","hostname","ReactDOM","Routes_LoginStatus","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5565b18e.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './App.css';\r\n\r\n\r\nclass NavBar extends React.Component {\r\n    render() {\r\n        console.log(\"Navigation Bar Rendered.\");\r\n\r\n        let loginButton;\r\n        if (this.props.loggedIn) {\r\n            loginButton = <MyLink className=\"NavLink\" to=\"/Logout\">Logout</MyLink>;\r\n        }\r\n        else {\r\n            loginButton = <MyLink className=\"NavLink\" to=\"/Login\">Login</MyLink>;\r\n        }\r\n        \r\n\r\n        return (\r\n            <div className=\"Nav\">\r\n                <div className=\"EmptyFlex\" style={{flexGrow: \"3\"}}></div>\r\n                <MyLink className=\"Title\" to=\"/\">ArrayOutOfBounds</MyLink>\r\n                <SearchBar className=\"SearchBar\" action=\"/search\"></SearchBar>\r\n                <div className=\"EmptyFlex\" style={{flexGrow: \"2\"}}></div>\r\n                <MyLink className=\"NavLink\" to=\"/\">Home</MyLink>\r\n                <MyLink className=\"NavLink\" to=\"/Questions\">Questions</MyLink>\r\n                <MyLink className=\"NavLink\" to=\"/Search\">Search</MyLink>\r\n                <MyLink className=\"NavLink\" to=\"/Media\">Media</MyLink>\r\n                <MyLink className=\"NavLink\" to=\"/Users\">Users</MyLink>\r\n                {loginButton}\r\n                <div className=\"EmptyFlex\" style={{flexGrow: \"3\"}}></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: \"\" };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.search = this.search.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ value: event.target.value });\r\n    }\r\n\r\n    search(e) {\r\n        console.log(\"Search\");\r\n        e.preventDefault();\r\n\r\n        //fetch for search\r\n        // fetch(this.props.action, )\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"SearchForm\" onSubmit={this.search}>\r\n                <input className={this.props.className} type=\"search\" value={this.state.value} onChange={this.handleChange} />\r\n                <input className=\"button SearchButton\" type=\"submit\" value=\"Search\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nclass MyLink extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n        <Link style={{ textDecoration: 'none' }} className={this.props.className} to={this.props.to}>\r\n            {this.props.children}\r\n        </Link>\r\n        );\r\n    }\r\n}\r\n\r\nexport {NavBar};","\r\nimport React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport {Button} from './Button';\r\n\r\nimport './App.css';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.postQuestion = this.postQuestion.bind(this);\r\n        this.state = {};\r\n    }\r\n\r\n    postQuestion() {\r\n        console.log(\"Posting question.\");\r\n        // Fetch request to post question\r\n        this.props.history.push('/Home');\r\n    }\r\n    \r\n    componentDidMount() {\r\n        console.log(\"DID MOUNT IN HOME\");\r\n        // var me = this;\r\n        // this.props.getLoginStatus()\r\n        // .then(function(status) {\r\n        //     if (status !== me.props.loggedIn) {\r\n        //         me.props.setLoginState(status);\r\n        //     }\r\n        // })\r\n        // .catch(function(error) {\r\n        //     console.log(\"Error getting login status: \" + error);\r\n        // });\r\n    }\r\n\r\n    render() {\r\n        var skip = false;\r\n        if (this.props.location.state != null) {\r\n            skip = this.props.location.state.skipFirstRender;\r\n            this.props.location.state.skipFirstRender = false;\r\n            this.props.location.state = null;\r\n        }\r\n\r\n        if (skip) {\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n\r\n        var status = this.props.loggedIn;\r\n        var message;\r\n        // if (this.props.loggedIn) {\r\n        if (status) {\r\n            message = <p>Logged In</p>;\r\n        }\r\n        else {\r\n            message = <p>Logged Out</p>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Welcome to my StackOverflow clone called ArrayOutOfBounds!</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {Home};","\r\nimport React from 'react';\r\n\r\nclass Button extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button className={ this.props.className } onClick={ this.props.callback }>{ this.props.children }</button>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport {Button};\r\n","\r\nimport React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst STATUS_OK = \"OK\";\r\nconst STATUS_ERROR = \"error\";\r\nconst BUTTON_CLASS = \"button ripple\";\r\n\r\nclass QuestionLink extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <Link style={{ textDecoration: 'none' }} className={this.props.className} to={this.props.to}> */}\r\n                <Link className={this.props.className} to={this.props.to}>\r\n                    {this.props.id}\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {STATUS_OK, STATUS_ERROR, BUTTON_CLASS, QuestionLink};\r\n","\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport {STATUS_OK, STATUS_ERROR, BUTTON_CLASS} from './Utils';\r\n\r\n\r\nclass CreateAccountForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { username: \"\", email: \"\", password: \"\", notification: \"\" };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.createAccount = this.createAccount.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    createAccount(e) {\r\n        console.log(\"Create New Account\");\r\n        e.preventDefault();\r\n\r\n        //fetch for creating account\r\n\r\n        var sendObj = { username: this.state.username, email: this.state.email, password: this.state.password };\r\n\r\n        var me = this;\r\n\r\n        fetch(this.props.action, {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(sendObj)\r\n        })\r\n        .then(function (response) {\r\n            console.log(response);\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                me.props.history.push({\r\n                    pathname: '/NewAccount',\r\n                    state: { msg: \"You have successfully created a new account.\" }\r\n                });\r\n            }\r\n            else if (json.status === STATUS_ERROR) {\r\n                me.setState({ notification: (\"Could not create an account successfully. Try again please. Error: \" + json.error) });\r\n            }\r\n            else {\r\n                console.log(\"Unkown error: \" + json.error);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.state.notification}</p>\r\n                <form className=\"\" onSubmit={this.createAccount}>\r\n                    <label>\r\n                        Username:\r\n                        <input className={this.props.className} type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Email:\r\n                        <input className={this.props.className} type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Password:\r\n                        <input className={this.props.className} type=\"text\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                    </label>\r\n                    <input className={BUTTON_CLASS} type=\"submit\" value=\"Create Account\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass SuccessNewAccountPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.props.location.state.msg}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { SuccessNewAccountPage };\r\nexport default withRouter(CreateAccountForm);","\r\nimport React from 'react';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\n\r\nimport {STATUS_OK, STATUS_ERROR, BUTTON_CLASS} from './Utils';\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { username: \"\", password: \"\", notification: \"\", redirect: false };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    login(e) {\r\n        console.log(\"Log in\");\r\n        e.preventDefault();\r\n\r\n        //fetch for logging in\r\n        var sendObj = { username: this.state.username, password: this.state.password };\r\n        \r\n        var me = this;\r\n\r\n        fetch(this.props.action, {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(sendObj)\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                me.setState( { redirect: true } );\r\n                me.props.history.push({\r\n                                        pathname: '/Home',\r\n                                        state: { skipFirstRender: true }\r\n                                    });\r\n            }\r\n            else if (json.status === STATUS_ERROR) {\r\n                me.setState({ notification: (\"Could not login successfully. Try again please. Error: \" + json.error) });\r\n            }\r\n            else {\r\n                console.log(\"Unkown error: \" + json.error);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // if (this.state.redirect) {\r\n        //     return (\r\n        //             <Redirect to=\"/Home\"/>\r\n        //         );\r\n        // }\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.state.notification}</p>\r\n                <form className=\"\" onSubmit={this.login}>\r\n                    <label>\r\n                        Username:\r\n                        <input className={this.props.className} type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Password:\r\n                        <input className={this.props.className} type=\"text\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                    </label>\r\n                    <input className={BUTTON_CLASS} type=\"submit\" value=\"Login\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LoginForm);\r\n","\r\n\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport {STATUS_OK, STATUS_ERROR, BUTTON_CLASS} from './Utils';\r\n\r\nclass VerifyForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { email: \"\", key: \"\", notification: \"\" };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.verifyAccount = this.verifyAccount.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    verifyAccount(e) {\r\n        console.log(\"Verify Account\");\r\n        e.preventDefault();\r\n\r\n        //fetch for creating account\r\n\r\n        var sendObj = { email: this.state.email, key: this.state.key };\r\n\r\n        var me = this;\r\n\r\n        fetch(this.props.action, {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(sendObj)\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                me.props.history.push({\r\n                    pathname: '/Verify',\r\n                    state: { msg: \"You have successfully verified a new account.\" }\r\n                });\r\n            }\r\n            else if (json.status === STATUS_ERROR) {\r\n                me.setState({ notification: (\"Could not verify an account successfully. Try again please. Error: \" + json.error) });\r\n            }\r\n            else {\r\n                console.log(\"Unkown error: \" + json.error);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.state.notification}</p>\r\n                <form className=\"\" onSubmit={this.verifyAccount}>\r\n                    <label>\r\n                        Email:\r\n                        <input className={this.props.className} type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Key:\r\n                        <input className={this.props.className} type=\"text\" name=\"key\" value={this.state.key} onChange={this.handleChange} />\r\n                    </label>\r\n                    <input className={BUTTON_CLASS} type=\"submit\" value=\"Verify Account\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass VerifyPage extends React.Component {\r\n    render() {\r\n        console.log(\"Hi\");\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.props.location.state.msg}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst verifyForm = withRouter(VerifyForm);\r\n\r\nexport { VerifyPage, verifyForm };\r\n// export default withRouter(VerifyForm);","\r\nimport React from 'react';\r\n\r\nimport LoginForm from './Login';\r\nimport CreateAccountForm from './Accounts';\r\nimport {verifyForm as VerifyForm} from './Verify';\r\n\r\nimport {STATUS_OK} from './Utils';\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n    componentDidMount() {\r\n        var me = this;\r\n        this.props.getLoginStatus()\r\n        .then(function(status) {\r\n            if (status !== me.props.loggedIn) {\r\n                me.props.setLoginState(status);\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Error getting login status: \" + error);\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <CreateAccountForm action=\"/adduser\" />\r\n                <br />\r\n                <br />\r\n                <hr />\r\n                <LoginForm action=\"/login\" />\r\n                <br />\r\n                <br />\r\n                <hr />\r\n                <VerifyForm action=\"/verify\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass LogoutPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {notification: \"\"};\r\n    }\r\n    \r\n    componentDidMount() {\r\n        var me = this;\r\n        fetch(this.props.action, {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            var notification;\r\n            if (json.status === STATUS_OK) {\r\n                notification = \"You have successfully logged out.\";\r\n                // me.props.setLoginState()\r\n                // me.setState({ notification: \"You have successfully logged out.\" });\r\n            }\r\n            else {\r\n                notification = \"Could not logout. Error: \" + json.error;\r\n                // me.setState({ notification: \"Could not logout. Error: \" + json.error});\r\n            }\r\n            me.props.setLoginState(false, notification);\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Error getting logout: \" + error);\r\n            me.props.setLoginState(false, \"Failed to logout.\");\r\n            // me.setState({notification: \"Failed to logout.\"})\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.props.notification}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport { LoginPage, LogoutPage };\r\n","\r\n\r\nimport React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport {Button} from './Button.jsx';\r\n\r\nimport {STATUS_OK, STATUS_ERROR, BUTTON_CLASS, QuestionLink} from './Utils';\r\n\r\n\r\nclass AddQuestionForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {notification: \"\", newQuestionPage: \"\"};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addQuestion = this.addQuestion.bind(this);\r\n    }\r\n\r\n    \r\n    handleChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    addQuestion(e) {\r\n        console.log(\"Add question\");\r\n        e.preventDefault();\r\n\r\n        var tagsArray;\r\n        if (this.state.tags != null && this.state.tags !== \"\") {\r\n            tagsArray = this.state.tags.split(\" \");\r\n        }\r\n\r\n        var mediaArray;\r\n        if (this.state.media != null && this.state.media !== \"\") {\r\n            mediaArray = this.state.media.split(\" \");\r\n        }\r\n\r\n        var sendObj = { title: this.state.title, body: this.state.body };\r\n\r\n        if (tagsArray != null) {\r\n            sendObj.tags = tagsArray;\r\n        }\r\n\r\n        if (mediaArray != null) {\r\n            sendObj.media = mediaArray;\r\n        }\r\n\r\n        var me = this;\r\n        var success = false;\r\n        var questionId = \"\";\r\n\r\n        fetch(this.props.action, {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(sendObj)\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                success = true;\r\n                questionId = json.id;\r\n            }\r\n            else {\r\n                success = false;\r\n                me.setState({ notification: (\"Could not add question. Try again please. Error: \" + json.error) });\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            success = false;\r\n            console.log(\"Catch: Failed to add question. Error: \" + error);\r\n            me.setState({notification: \"Failed to add  question. Error: \" + error});\r\n        })\r\n        .finally(function() {\r\n            if (success) {\r\n                // me.props.history.push('/Question/' + questionId);\r\n                me.setState({newQuestionPage: questionId});\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        var questionId = this.state.newQuestionPage;\r\n        var newQuestionLink;\r\n        if (questionId != null && questionId !== \"\") {\r\n            newQuestionLink = (\r\n                                <div>\r\n                                    <p>Your new question can be found at</p>\r\n                                    <QuestionLink id={questionId} to={'/Question/' + questionId} />\r\n                                </div>\r\n                            );\r\n        }\r\n        else {\r\n            newQuestionLink = null;\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.state.notification}</p>\r\n                <form className=\"\" onSubmit={this.addQuestion}>\r\n                    <label>\r\n                        Title:\r\n                        <input className={this.props.className} type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Body:\r\n                        <textarea className={this.props.className} name=\"body\" value={this.state.body} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Tags (space separated):\r\n                        <input className={this.props.className} type=\"text\" name=\"tags\" value={this.state.tags} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Media IDs (space separated):\r\n                        <input className={this.props.className} type=\"text\" name=\"media\" value={this.state.media} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <input className={BUTTON_CLASS} type=\"submit\" value=\"Add Question\" />\r\n                </form>\r\n                <br />\r\n                <br />\r\n                \r\n                {newQuestionLink}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nclass QuestionPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {id: 0, user: null, title:\"\", body:\"\", score:0, view_count:0, answer_count:0, timestamp:0,\r\n                        media:null, tags:null, accepted_answer_id:null, answers: null};\r\n\r\n        this.refresh_visible = false;\r\n\r\n\r\n        this.answerAdded = this.answerAdded.bind(this);\r\n        this.deleteQuestion = this.deleteQuestion.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.getData = this.getData.bind(this);\r\n        this.vote = this.vote.bind(this);\r\n    }\r\n\r\n    answerAdded() {\r\n        console.log(\"QuestionPage: An answer was added.\");\r\n        this.refresh_visible = true;\r\n        this.setState(this.state);\r\n    }\r\n\r\n    refresh() {\r\n        this.getData();\r\n        // this.setState(this.state);\r\n        //this.setState({refresh_visible: false});\r\n    }\r\n\r\n    getData() {\r\n        var success = false;\r\n        var me = this;\r\n        var newState = {};\r\n        \r\n        let questionId = this.props.match.params.id;\r\n\r\n        fetch('/questions/' + questionId, {\r\n            method: \"GET\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\"\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                success = true;\r\n                newState = json.question;\r\n                // me.setState(json.question);\r\n            }\r\n            else {\r\n                success = false;\r\n                me.setState({errorMessage: json.error});\r\n            }\r\n        \r\n            return fetch(\"/questions/\" + questionId + \"/answers\", {\r\n                method: \"GET\",\r\n                credentials: 'include',\r\n                mode: \"cors\",\r\n                cache: \"no-cache\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            console.log(\"Getting answers\");\r\n            if (json.status === STATUS_OK) {\r\n                success = true;\r\n                newState.answers = json.answers;\r\n            }\r\n            else {\r\n                success = false;\r\n                me.setState({ notification: (\"Could not get answers for questionId: \" + questionId + \". Error: \" + json.error) });\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            success = false;\r\n            me.setState({notification: \"Failed to get answers for question \" + questionId + \", Error: \" + error});\r\n            console.log(\"Catch: Failed to get answers. Error: \" + error);\r\n        })\r\n        .finally(function() {\r\n            if (success) {\r\n                me.setState(newState);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    deleteQuestion(e) {\r\n        console.log(\"Delete question\");\r\n        e.preventDefault();\r\n\r\n        var me = this;\r\n        var success = false;\r\n        var questionId = this.props.match.params.id;\r\n\r\n        fetch('/questions/' + questionId, {\r\n            method: \"DELETE\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\"\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                success = true;                \r\n            }\r\n            else {\r\n                success = false;\r\n                me.setState({ notification: (\"Could not delete question. Try again please. Error: \" + json.error) });\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            success = false;\r\n            me.setState({ notification: (\"Failed to delete question. Error: \" + error) });\r\n            console.log(\"Failed to delete question. Error: \" + error);\r\n        })\r\n        .finally(function() {\r\n            if (success) {\r\n                me.props.history.push('/');\r\n            }\r\n        });\r\n    }\r\n\r\n    vote(id, upvote) {\r\n        var me = this;\r\n        var success = false;\r\n\r\n        var sendObj = {};\r\n        if (upvote === true) {\r\n        }\r\n        else if (upvote === false) {\r\n            sendObj.upvote = false;\r\n        }\r\n\r\n        fetch('/questions/' + id + '/upvote', {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(sendObj)\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                success = true;\r\n            }\r\n            else {\r\n                success = false;\r\n                me.setState({ notification: (\"Could not upvote/downvote question.\") });\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            success = false;\r\n            me.setState({ notification: (\"Failed to upvote/downvote question. Error: \" + error) });\r\n            console.log(\"Failed to upvote/downvote question. Error: \" + error);\r\n        })\r\n        .finally(function() {\r\n            if (success) {\r\n                me.refresh();\r\n                // me.setState({notification: \"Upvoted/Downvoted question with ID: \" + id});\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        if (this.state.id !== 0) {\r\n            var refreshButton;\r\n            if (this.refresh_visible === true) {\r\n                refreshButton = (\r\n                    <button className=\"button ripple\" onClick={this.refresh}>Refresh</button>\r\n                );\r\n                this.refresh_visible = false;\r\n            }\r\n            else {\r\n                refreshButton = null;\r\n            }\r\n\r\n            var mediaDisplay;\r\n            if (this.state.media != null && this.state.media.length > 0) {\r\n                mediaDisplay = this.state.media.map((mediaId) => {\r\n                    return (\r\n                        <div>\r\n                            <img src={'/media/' + mediaId} />\r\n                        </div>\r\n                    );\r\n                });\r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    <p className=\"Notification\">{this.state.notification}</p>\r\n                    <form className=\"\" onSubmit={this.deleteQuestion}>\r\n                        <input className={BUTTON_CLASS} type=\"submit\" value=\"Delete Question\" />\r\n                    </form>\r\n\r\n                    \r\n\r\n                    <p>Question ID: {this.state.id}</p>\r\n                    <p>Title: {this.state.title}</p>\r\n                    <br />\r\n                    <p>{this.state.body}</p>\r\n\r\n                    <br />\r\n                    <p>Media: </p>\r\n                    {mediaDisplay}\r\n\r\n\r\n                    <br />\r\n                    <br />\r\n                    <p>Score: {this.state.score}</p>\r\n                    <p>Views: {this.state.view_count}</p>\r\n                    <p>Posted by: {this.state.user.username}</p>\r\n                    <p>Reputation: {this.state.user.reputation}</p>\r\n                    <p>Time Posted: {this.state.timestamp}</p>\r\n                    <p>Tags: {this.state.tags}</p>\r\n                    <p>Accepted Answer ID: {this.state.accepted_answer_id}</p>\r\n                    <br />\r\n                    <br />\r\n                    <p>Number of answers: {this.state.answer_count}</p>\r\n\r\n                    <br />\r\n                    <button className=\"button ripple\" onClick={() => this.vote(this.state.id, true)}>Upvote</button>\r\n                    <br />\r\n                    <button className=\"button ripple\" onClick={() => this.vote(this.state.id, false)}>Downvote</button>\r\n                    <br />\r\n\r\n                    <br />\r\n                    <hr />\r\n\r\n                    <p>Add answer: </p>\r\n\r\n                    {refreshButton}\r\n                    \r\n                    <AddAnswerForm action={\"/questions/\" + this.props.match.params.id + \"/answers/add\"} callback={this.answerAdded} />\r\n\r\n                    <br />\r\n                    <hr />\r\n\r\n                    <Answers questionId={this.props.match.params.id} answers={this.state.answers} callback={this.refresh} />\r\n\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.state.errorMessage != null) {\r\n            return (\r\n                <div>\r\n                    <p className=\"Notification\">{this.state.errorMessage}</p>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            console.log(\"Hi\");\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nclass Answers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {notification: \"\"};\r\n    }\r\n\r\n    acceptAnswer(id) {\r\n        console.log(\"Accept Answer ID: \" + id);\r\n        var me = this;\r\n        var success = false;\r\n\r\n        fetch('/answers/' + id + '/accept', {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\"\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                success = true;\r\n            }\r\n            else {\r\n                success = false;\r\n                me.setState({ notification: (\"Could not accept answer.\") });\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            success = false;\r\n            me.setState({ notification: (\"Failed to accept answer. Error: \" + error) });\r\n            console.log(\"Failed to accept answer. Error: \" + error);\r\n        })\r\n        .finally(function() {\r\n            if (success) {\r\n                me.setState({notification: \"Accepted answer with ID: \" + id});\r\n            }\r\n        });\r\n    }\r\n\r\n    vote(id, upvote) {\r\n        var me = this;\r\n        var success = false;\r\n\r\n        var sendObj = {};\r\n        if (upvote === true) {\r\n        }\r\n        else if (upvote === false) {\r\n            sendObj.upvote = false;\r\n        }\r\n\r\n        fetch('/answers/' + id + '/upvote', {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(sendObj)\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                success = true;\r\n            }\r\n            else {\r\n                success = false;\r\n                me.setState({ notification: (\"Could not upvote/downvote answer.\") });\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            success = false;\r\n            me.setState({ notification: (\"Failed to upvote/downvote answer. Error: \" + error) });\r\n            console.log(\"Failed to upvote/downvote answer. Error: \" + error);\r\n        })\r\n        .finally(function() {\r\n            if (success) {\r\n                me.props.callback();\r\n                // me.setState({notification: \"Upvoted/Downvoted answer with ID: \" + id});\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.props.answers) {\r\n            return (\r\n                <div>\r\n                    <p className=\"Notification\">{this.state.notification}</p>\r\n                    {this.props.answers.map((answer) => {\r\n                                        return (\r\n                                            <React.Fragment>\r\n                                            <Answer id={answer.id} body={answer.body} user={answer.user} media={answer.media}\r\n                                            score={answer.score} is_accepted={answer.is_accepted} timestamp={answer.timestamp} />\r\n\r\n                                            <br />\r\n                                            <button className=\"button ripple\" onClick={() => this.vote(answer.id, true)}>Upvote</button>\r\n                                            <br />\r\n                                            <button className=\"button ripple\" onClick={() => this.vote(answer.id, false)}>Downvote</button>\r\n                                            <br />\r\n                                            <button className=\"button ripple\" onClick={() => this.acceptAnswer(answer.id)}>Accept Answer</button>\r\n                                            <br />\r\n                                            <hr />\r\n                                            </React.Fragment>\r\n                                        );\r\n                                        } )}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <p className=\"Notification\">{this.state.notification}</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nclass Answer extends React.Component {\r\n    render() {\r\n        var accepted;\r\n        if (this.props.is_accepted === true) {\r\n            accepted = \"True\";\r\n        }\r\n        else {\r\n            accepted = \"False\";\r\n        }\r\n\r\n        var mediaDisplay;\r\n        if (this.props.media != null && this.props.media.length > 0) {\r\n            mediaDisplay = this.props.media.map((mediaId) => {\r\n                return (\r\n                    <div>\r\n                        <img src={'/media/' + mediaId} />\r\n                    </div>\r\n                );\r\n            });\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                <p>{this.props.body}</p>\r\n                <p>Answer ID: {this.props.id}</p>\r\n                <p>Username: {this.props.user}</p>\r\n                <p>Score: {this.props.score}</p>\r\n                <p>Accepted: {accepted}</p>\r\n                <p>Timestamp: {this.props.timestamp}</p>\r\n\r\n\r\n                <p>Media: </p>\r\n                {mediaDisplay}\r\n\r\n\r\n                <br />\r\n                {/* <p>Media: {this.props.media}</p> */}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nclass AddAnswerForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {body:\"\"};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addAnswer = this.addAnswer.bind(this);\r\n    }\r\n    \r\n    handleChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    addAnswer(e) {\r\n        console.log(\"Add answer\");\r\n        e.preventDefault();\r\n        \r\n        var mediaArray;\r\n        if (this.state.media != null && this.state.media !== \"\") {\r\n            mediaArray = this.state.media.split(\" \");\r\n        }\r\n\r\n        var sendObj = { body: this.state.body };\r\n\r\n        if (mediaArray != null) {\r\n            sendObj.media = mediaArray;\r\n        }\r\n\r\n        var me = this;\r\n        var success = false;\r\n        var answerId = \"\";\r\n\r\n        fetch(this.props.action, {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(sendObj)\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                success = true;\r\n                answerId = json.id;\r\n            }\r\n            else {\r\n                success = false;\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            success = false;\r\n            console.log(\"Catch: Failed to add answer. Error: \" + error);\r\n        })\r\n        .finally(function() {\r\n            if (success) {\r\n                me.props.callback();\r\n            }\r\n            else {\r\n                me.setState({notification: \"Could not add answer.\"})\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.state.notification}</p>\r\n                <form className=\"\" onSubmit={this.addAnswer}>\r\n                    <label>\r\n                        Answer:\r\n                        <textarea className={this.props.className} name=\"body\" value={this.state.body} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Media IDs (space separated):\r\n                        <input className={this.props.className} type=\"text\" name=\"media\" value={this.state.media} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <input className={BUTTON_CLASS} type=\"submit\" value=\"Add Answer\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst addQuestionForm = withRouter(AddQuestionForm);\r\nconst questionPage = withRouter(QuestionPage);\r\n\r\n\r\nexport {questionPage, addQuestionForm};\r\n","\r\nimport React from 'react';\r\nimport {addQuestionForm as AddQuestionForm} from './Questions';\r\n\r\nclass QuestionsPage extends React.Component {\r\n\r\n    componentDidMount() {\r\n        var me = this;\r\n        this.props.getLoginStatus()\r\n        .then(function(status) {\r\n            if (status !== me.props.loggedIn) {\r\n                me.props.setLoginState(status);\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Error getting login status: \" + error);\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <AddQuestionForm action=\"/questions/add\" />\r\n                <br />\r\n                <hr />\r\n                <br />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {QuestionsPage};\r\n","\r\n\r\nimport React from 'react';\r\nimport {STATUS_OK, STATUS_ERROR, BUTTON_CLASS} from './Utils';\r\n\r\nclass MediaPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var me = this;\r\n        this.props.getLoginStatus()\r\n        .then(function(status) {\r\n            if (status !== me.props.loggedIn) {\r\n                me.props.setLoginState(status);\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Error getting login status: \" + error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AddMediaForm action={this.props.action} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass AddMediaForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {notification: \"\"};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addMedia = this.addMedia.bind(this);\r\n    }\r\n\r\n    \r\n    handleChange(event) {\r\n        let files = event.target.files;\r\n        this.setState({ file: files[0] });\r\n    }\r\n\r\n    addMedia(e) {\r\n        console.log(\"Add media\");\r\n        e.preventDefault();\r\n\r\n        var formData = new FormData();\r\n\r\n        formData.append('content', this.state.file);\r\n        \r\n        var me = this;\r\n        var success = false;\r\n        var mediaId;\r\n\r\n        fetch(this.props.action, {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            // headers: {\r\n            //     \"Content-Type\": \"multipart/form-data\"\r\n            // },\r\n            body: formData\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                success = true;\r\n                mediaId = json.id;\r\n                me.setState({notification: (\"Added media with ID: \" + mediaId) });\r\n            }\r\n            else {\r\n                success = false;\r\n                me.setState({ notification: (\"Could not add media. Try again please. Error: \" + json.error) });\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            success = false;\r\n            console.log(\"Failed to add media. Error: \" + error);\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.state.notification}</p>\r\n                <form className=\"\" onSubmit={this.addMedia}>\r\n                    <label>\r\n                        Media:\r\n                        <input type=\"file\" onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <input className={BUTTON_CLASS} type=\"submit\" value=\"Upload Media\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {MediaPage};","\r\nimport React from 'react';\r\nimport {STATUS_OK, STATUS_ERROR, BUTTON_CLASS} from './Utils';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass SearchPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var me = this;\r\n        this.props.getLoginStatus()\r\n        .then(function(status) {\r\n            if (status !== me.props.loggedIn) {\r\n                me.props.setLoginState(status);\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Error getting login status: \" + error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SearchForm action=\"/search\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nclass SearchForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {notification: \"\", timestamp: \"\", limit: \"\", query: \"\", sort: \"\", tags: \"\", media: false, accepted: false, searchResults: []};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.search = this.search.bind(this);\r\n    }\r\n\r\n    \r\n    handleChange(event) {\r\n        let name = event.target.name;\r\n        let value;\r\n        if (event.target.type === 'checkbox') {\r\n            value = event.target.checked;\r\n        }\r\n        else {\r\n            value = event.target.value;\r\n        }\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    search(e) {\r\n        console.log(\"Search question ---------------------------------------------------\");\r\n        e.preventDefault();\r\n\r\n        var sendObj = {};\r\n        \r\n        var timestamp = this.state.timestamp;\r\n        if (timestamp !== \"\") {\r\n            sendObj.timestamp = parseInt(timestamp);\r\n        }\r\n\r\n        var limit = this.state.limit;\r\n        if (limit !== \"\" && parseInt(limit) !== 25) {\r\n            sendObj.limit = parseInt(limit);\r\n        }\r\n\r\n        var query = this.state.query;\r\n        if (query !== \"\") {\r\n            sendObj.q = query;\r\n        }\r\n\r\n        var sort = this.state.sort;\r\n        if (sort !== \"\" && sort !== \"score\") {\r\n            sendObj.sort_by = sort;\r\n        }\r\n\r\n        var tags = this.state.tags;\r\n        if (tags !== \"\") {\r\n            let tagsArray = tags.split(\" \");\r\n            \r\n            sendObj.tags = tagsArray.filter(function(element) {\r\n                return element !== \"\";\r\n            });\r\n        }\r\n\r\n        var media = this.state.media;\r\n        if (media !== false) {\r\n            sendObj.has_media = media;\r\n        }\r\n\r\n        var accepted = this.state.accepted;\r\n        if (accepted !== false) {\r\n            sendObj.accepted = accepted;\r\n        }\r\n\r\n        console.log(sendObj);\r\n        \r\n        var me = this;\r\n        var success = false;\r\n        var questions;\r\n\r\n        fetch(this.props.action, {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(sendObj)\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                success = true;\r\n                questions = json.questions;\r\n                me.setState({searchResults: questions});\r\n            }\r\n            else {\r\n                success = false;\r\n                me.setState({ notification: (\"Could not perform search. Try again please. Error: \" + json.error) });\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            success = false;\r\n            me.setState({notification: \"Failed to search. Error\" + error});\r\n            console.log(\"Failed to search. Error: \" + error);\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        var searchResults = this.state.searchResults;\r\n        var resultsContent;\r\n        if (searchResults && searchResults.length > 0) {\r\n            resultsContent = (\r\n                <div>\r\n                    {searchResults.map((question) => {\r\n                                        return (\r\n                                            <div>\r\n                                                <SearchResult title={question.title} score={question.score} to={'/Question/' + question.id} />\r\n                                                <br />\r\n                                            </div>\r\n                                        );\r\n                                        } )}\r\n                </div>\r\n            );\r\n        }\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.state.notification}</p>\r\n                <form className=\"\" onSubmit={this.search}>\r\n                    <label>\r\n                        Search Query String:\r\n                        <input className={this.props.className} type=\"text\" name=\"query\" value={this.state.query} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Timestamp:\r\n                        <input className={this.props.className} type=\"number\" step=\"1\" name=\"timestamp\" value={this.state.timestamp} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Limit:\r\n                        <input className={this.props.className} type=\"number\" step=\"1\" name=\"limit\" value={this.state.limit} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <br />\r\n                    <label>\r\n                        Sort By:\r\n                        <br />\r\n                        <label>\r\n                            Score:\r\n                            <input type=\"radio\" name=\"sort\" value=\"score\" checked={this.state.sort === \"score\"} onChange={this.handleChange} />\r\n                        </label>\r\n                        <br />\r\n                        <label>\r\n                            Timestamp:\r\n                            <input type=\"radio\" name=\"sort\" value=\"timestamp\" checked={this.state.sort === \"timestamp\"} onChange={this.handleChange} />\r\n                        </label>\r\n\r\n                    </label>\r\n                    <br />\r\n                    <br />\r\n                    <label>\r\n                        Tags (space separated):\r\n                        <input className={this.props.className} type=\"text\" name=\"tags\" value={this.state.tags} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Has Media:\r\n                        <input className={this.props.className} type=\"checkbox\" name=\"media\" checked={this.state.media === true} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Accepted:\r\n                        <input className={this.props.className} type=\"checkbox\" name=\"accepted\" checked={this.state.accepted === true} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <input className={BUTTON_CLASS} type=\"submit\" name=\"SearchButton\" value=\"Search\" />\r\n                </form>\r\n\r\n                <br />\r\n                <hr />\r\n\r\n                {resultsContent}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SearchResult extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <Link style={{ textDecoration: 'none' }} className={this.props.className} to={this.props.to}> */}\r\n                <Link className={this.props.className} to={this.props.to}>\r\n                    {this.props.title}\r\n                </Link>\r\n                <p>Score: {this.props.score}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {SearchPage};\r\n","\r\n\r\nimport React from 'react';\r\nimport {STATUS_OK, STATUS_ERROR, BUTTON_CLASS, QuestionLink} from './Utils';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nclass UsersPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {notification: \"\"};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.getUser = this.getUser.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var me = this;\r\n        this.props.getLoginStatus()\r\n        .then(function(status) {\r\n            if (status !== me.props.loggedIn) {\r\n                me.props.setLoginState(status);\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Error getting login status: \" + error);\r\n        });\r\n    }\r\n    \r\n    handleChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    getUser(e) {\r\n        console.log(\"Get User\");\r\n        e.preventDefault();\r\n\r\n        if (this.state.username == null || this.state.username === \"\") {\r\n            return;\r\n        }\r\n\r\n        this.props.history.push('/User/' + this.state.username);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.state.notification}</p>\r\n                <p>Find a user by typing in their username.</p>\r\n\r\n                <form className=\"\" onSubmit={this.getUser}>\r\n                    <label>\r\n                        Username:\r\n                        <input className={this.props.className} type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <input className={BUTTON_CLASS} type=\"submit\" value=\"Find User\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass UserPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        var me = this;\r\n        var username = this.props.match.params.username;\r\n\r\n        var newState = {};\r\n\r\n        this.props.getLoginStatus()\r\n        .then(function(status) {\r\n            if (status !== me.props.loggedIn) {\r\n                me.props.setLoginState(status);\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Error getting login status: \" + error);\r\n        });\r\n\r\n        fetch('/user/' + username, {\r\n            method: \"GET\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\"\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                newState.email = json.user.email;\r\n                newState.reputation = json.user.reputation;\r\n            }\r\n            else {\r\n                me.setState({notification: \"Unable to get user with username: \" + username});\r\n            }\r\n            return fetch('/user/' + username + '/questions', {\r\n                method: \"GET\",\r\n                credentials: 'include',\r\n                mode: \"cors\",\r\n                cache: \"no-cache\"\r\n            });\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                newState.questions = json.questions;\r\n            }\r\n            else {\r\n                me.setState({notification: \"Unable to get the questions of user: \" + username});\r\n            }\r\n            return fetch('/user/' + username + '/answers', {\r\n                method: \"GET\",\r\n                credentials: 'include',\r\n                mode: \"cors\",\r\n                cache: \"no-cache\"\r\n            });\r\n        })\r\n        .then(function(response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                newState.answers = json.answers;\r\n            }\r\n            else {\r\n                me.setState({notification: \"Unable to get the answers of user: \" + username});\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Failed to fetch part or all of user profile with username: \" + username + \", Error: \" + error);\r\n        })\r\n        .finally(function() {\r\n            me.setState(newState);\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        var username = this.props.match.params.username;\r\n        var userProfile;\r\n        var userQuestionsDisplay;\r\n        var userAnswersDisplay;\r\n\r\n        var questions = this.state.questions;\r\n        var answers = this.state.answers;\r\n\r\n        if (this.state.email && this.state.reputation) {\r\n            userProfile = (\r\n                <div>\r\n                    <p>Username: {username}</p>\r\n                    <p>Reputation: {this.state.reputation}</p>\r\n                    <p>Email: {this.state.email}</p>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            userProfile = (\r\n                <React.Fragment>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n\r\n        if (questions != null && questions.length > 0) {\r\n            userQuestionsDisplay = (\r\n                <div>\r\n                    {questions.map((questionId) => {\r\n                                        return (\r\n                                            <div>\r\n                                                <QuestionLink id={questionId} to={'/Question/' + questionId} />\r\n                                                <br />\r\n                                            </div>\r\n                                        );\r\n                                        } )}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            userQuestionsDisplay = (\r\n                <React.Fragment>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        if (answers != null && answers.length > 0) {\r\n            userAnswersDisplay = (\r\n                <div>\r\n                    {answers.map((answerId) => {\r\n                                        return (\r\n                                            <div>\r\n                                                <p>{answerId}</p>\r\n                                            </div>\r\n                                        );\r\n                                        } )}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            userAnswersDisplay = (\r\n                <React.Fragment>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.state.notification}</p>\r\n                <h1>User Profile</h1>\r\n                <br />\r\n                {userProfile}\r\n                <br />\r\n                <br />\r\n                <p>Questions posted by user</p>\r\n                {userQuestionsDisplay}\r\n                <br />\r\n                <br />\r\n                <p>Answers posted by user</p>\r\n                {userAnswersDisplay}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst usersPage = withRouter(UsersPage);\r\n\r\nexport {usersPage, UserPage};\r\n","\r\nimport React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport {Home} from './Home';\r\nimport {NavBar} from './Navigation';\r\nimport {SuccessNewAccountPage} from './Accounts';\r\nimport {LoginPage, LogoutPage} from './LoginPage';\r\nimport {VerifyPage} from './Verify';\r\nimport {questionPage as QuestionPage} from './Questions';\r\nimport {QuestionsPage} from './QuestionsPage';\r\nimport {MediaPage} from './Media.js';\r\nimport {SearchPage} from './SearchPage.js';\r\nimport {usersPage as UsersPage} from './Users.js';\r\nimport {UserPage} from './Users.js';\r\n\r\nclass LoginStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // fetch request to determine if logged in.\r\n\r\n        this.setLoginState = this.setLoginState.bind(this);\r\n        this.getLoginStatus = this.getLoginStatus.bind(this);\r\n\r\n        this.state = { loggedIn: false, notification: \"\" };\r\n        this.justChanged = false;\r\n    }\r\n\r\n    setLoginState(loggedIn, notification) {\r\n        this.setState( {loggedIn: loggedIn, notification: notification} );\r\n    }\r\n\r\n    getLoginStatus() {\r\n        console.log(\"get login status was called\");\r\n        var me = this;\r\n\r\n        // fetch request to determine if logged in.\r\n        // var status = await \r\n        return fetch('/CheckLoginStatus', {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (me.state.loggedIn !== json.loggedIn) {\r\n                me.justChanged = true;\r\n                me.setState({ loggedIn: json.loggedIn })\r\n            }\r\n            if (json.loggedIn === true) {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Failed to find out if you are logged in: \" + error);\r\n            return false;\r\n        });\r\n\r\n        // console.log(\"STATUS: \" + status);\r\n\r\n        // if (this.state.loggedIn !== status) {\r\n        //     this.justChanged = true;\r\n        //     this.setState({ loggedIn: status })\r\n        // }\r\n        // // this.setState({loggedIn: status});\r\n        // return status;\r\n    }\r\n\r\n    render() {\r\n\r\n        var status = this.state.loggedIn;\r\n        // console.log(\"LoginStatus was rendered.\");\r\n        // let changed = this.justChanged;\r\n        // this.justChanged = false;\r\n        \r\n        // let status;\r\n        // if (!changed) {\r\n        //     console.log(\"HI\");\r\n        //     status = this.getLoginStatus();\r\n        //     console.log(\"BYE\");\r\n        // }\r\n        // else {\r\n        //     status = this.state.loggedIn;\r\n        // }\r\n\r\n        return (\r\n        <React.Fragment>\r\n            <NavBar loggedIn={status} />\r\n            <Route exact path = \"/\" render={ (props) => <Home {...props} loggedIn={status} getLoginStatus={this.getLoginStatus} setLoginState={this.setLoginState} /> } />\r\n            <Route path=\"/Search\" render={ (props) => <SearchPage {...props} action=\"/search\" loggedIn={status} getLoginStatus={this.getLoginStatus} setLoginState={this.setLoginState} /> } />\r\n            <Route path=\"/NewAccount\" render={ (props) => <SuccessNewAccountPage {...props} loggedIn={status} getLoginStatus={this.getLoginStatus} setLoginState={this.setLoginState} />} />\r\n            <Route path=\"/Login\" render={ (props) => <LoginPage {...props} loggedIn={status} getLoginStatus={this.getLoginStatus} setLoginState={this.setLoginState} /> } />\r\n            <Route path=\"/Logout\" render={ (props) => <LogoutPage {...props} action=\"/logout\" notification={this.state.notification} loggedIn={status} getLoginStatus={this.getLoginStatus} setLoginState={this.setLoginState} /> } />\r\n            <Route path=\"/Verify\" component={VerifyPage} />\r\n            <Route path=\"/Questions\" render={ (props) => <QuestionsPage {...props} notification={this.state.notification} loggedIn={status} getLoginStatus={this.getLoginStatus} setLoginState={this.setLoginState} /> }  />\r\n            <Route path=\"/Question/:id\" render={ (props) => <QuestionPage {...props} notification={this.state.notification} loggedIn={status} getLoginStatus={this.getLoginStatus} setLoginState={this.setLoginState} /> }  />\r\n            <Route path=\"/Media\" render={ (props) => <MediaPage {...props} action=\"/addmedia\" notification={this.state.notification} loggedIn={status} getLoginStatus={this.getLoginStatus} setLoginState={this.setLoginState} /> } />\r\n            <Route path=\"/Users\" render={ (props) => <UsersPage {...props} notification={this.state.notification} loggedIn={status} getLoginStatus={this.getLoginStatus} setLoginState={this.setLoginState} /> } />\r\n            <Route path=\"/User/:username\" render={ (props) => <UserPage {...props} notification={this.state.notification} loggedIn={status} getLoginStatus={this.getLoginStatus} setLoginState={this.setLoginState} /> } />\r\n        </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport {LoginStatus};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {NavBar} from './Navigation.js';\r\nimport {Home} from './Home';\r\nimport {LoginStatus} from './Routes';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\r\n\r\nReactDOM.render((\r\n    <Router>\r\n        <div>\r\n            <LoginStatus />\r\n        </div>\r\n    </Router>\r\n ), document.getElementById('root'));\r\n\r\n\r\n//ReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}