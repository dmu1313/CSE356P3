{"version":3,"sources":["logo.svg","App.js","Navigation.js","Button.jsx","Home.jsx","Accounts.js","Utils.js","Login.js","Verify.js","LoginPage.js","Questions.js","QuestionsPage.js","Routes.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","console","log","react_default","a","createElement","className","src","logo","alt","href","target","rel","Component","NavBar","loginButton","this","props","loggedIn","Navigation_MyLink","to","style","flexGrow","Navigation_SearchBar","action","React","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","value","handleChange","bind","assertThisInitialized","search","event","setState","e","preventDefault","onSubmit","type","onChange","MyLink","react_router_dom","textDecoration","children","Button","onClick","callback","Home","postQuestion","history","push","me","getLoginStatus","then","status","setLoginState","catch","error","message","skip","location","skipFirstRender","Button_Button","CreateAccountForm","username","email","password","notification","createAccount","name","defineProperty","sendObj","fetch","method","credentials","mode","cache","headers","Content-Type","body","JSON","stringify","response","json","pathname","msg","SuccessNewAccountPage","withRouter","LoginForm","redirect","login","VerifyForm","key","verifyAccount","VerifyPage","verifyForm","LoginPage","Accounts","Login","LogoutPage","AddQuestionForm","addQuestion","tagsArray","tags","split","title","success","questionId","id","finally","QuestionPage","_this2","user","score","view_count","answer_count","timestamp","media","accepted_answer_id","answerAdded","match","params","question","errorMessage","reputation","Questions_AddAnswerForm","Questions_Answers","Answers","_this3","answers","map","answer","Fragment","Questions_Answer","is_accepted","Answer","AddAnswerForm","_this4","addAnswer","addQuestionForm","QuestionsPage","LoginStatus","justChanged","Navigation_NavBar","react_router","exact","path","render","App_App","assign","Home_Home","Accounts_SuccessNewAccountPage","LoginPage_LoginPage","LoginPage_LogoutPage","component","Boolean","window","hostname","ReactDOM","Routes_LoginStatus","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b89458cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\n\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    console.log(\"APP\");\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\n\n\nexport {App};\n","\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './App.css';\r\n\r\n\r\nclass NavBar extends React.Component {\r\n    render() {\r\n        console.log(\"Navigation Bar Rendered.\");\r\n\r\n        let loginButton;\r\n        if (this.props.loggedIn) {\r\n            loginButton = <MyLink className=\"NavLink\" to=\"/Logout\">Logout</MyLink>;\r\n        }\r\n        else {\r\n            loginButton = <MyLink className=\"NavLink\" to=\"/Login\">Login</MyLink>;\r\n        }\r\n        \r\n\r\n        return (\r\n            <div className=\"Nav\">\r\n                <div className=\"EmptyFlex\" style={{flexGrow: \"3\"}}></div>\r\n                <MyLink className=\"Title\" to=\"/\">ArrayOutOfBounds</MyLink>\r\n                <SearchBar className=\"SearchBar\" action=\"/search\"></SearchBar>\r\n                <div className=\"EmptyFlex\" style={{flexGrow: \"2\"}}></div>\r\n                <MyLink className=\"NavLink\" to=\"/Home\">Home</MyLink>\r\n                <MyLink className=\"NavLink\" to=\"/Questions\">Questions</MyLink>\r\n                {loginButton}\r\n                <div className=\"EmptyFlex\" style={{flexGrow: \"3\"}}></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: \"\" };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.search = this.search.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ value: event.target.value });\r\n    }\r\n\r\n    search(e) {\r\n        console.log(\"Search\");\r\n        e.preventDefault();\r\n\r\n        //fetch for search\r\n        // fetch(this.props.action, )\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"SearchForm\" onSubmit={this.search}>\r\n                <input className={this.props.className} type=\"search\" value={this.state.value} onChange={this.handleChange} />\r\n                <input className=\"button SearchButton\" type=\"submit\" value=\"Search\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nclass MyLink extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n        <Link style={{ textDecoration: 'none' }} className={this.props.className} to={this.props.to}>\r\n            {this.props.children}\r\n        </Link>\r\n        );\r\n    }\r\n}\r\n\r\nexport {NavBar};","\r\nimport React from 'react';\r\n\r\nclass Button extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button className={ this.props.className } onClick={ this.props.callback }>{ this.props.children }</button>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport {Button};\r\n","\r\nimport React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport {Button} from './Button';\r\n\r\nimport './App.css';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.postQuestion = this.postQuestion.bind(this);\r\n    }\r\n\r\n    postQuestion() {\r\n        console.log(\"Posting question.\");\r\n        // Fetch request to post question\r\n        this.props.history.push('/Home');\r\n    }\r\n    \r\n    componentDidMount() {\r\n        var me = this;\r\n        this.props.getLoginStatus()\r\n        .then(function(status) {\r\n            if (status !== me.props.loggedIn) {\r\n                me.props.setLoginState(status);\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Error getting login status: \" + error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        var skip = false;\r\n        if (this.props.location.state != null) {\r\n            skip = this.props.location.state.skipFirstRender;\r\n            this.props.location.state.skipFirstRender = false;\r\n            this.props.location.state = null;\r\n        }\r\n\r\n        if (skip) {\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n\r\n        var status = this.props.loggedIn;\r\n        var message;\r\n        // if (this.props.loggedIn) {\r\n        if (status) {\r\n            message = <p>Logged In</p>;\r\n        }\r\n        else {\r\n            message = <p>Logged Out</p>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Button className=\"button ripple\" callback={ this.postQuestion }>Post Question</Button>\r\n                {message}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {Home};","\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport {STATUS_OK, STATUS_ERROR, BUTTON_CLASS} from './Utils';\r\n\r\n\r\nclass CreateAccountForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { username: \"\", email: \"\", password: \"\", notification: \"\" };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.createAccount = this.createAccount.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    createAccount(e) {\r\n        console.log(\"Create New Account\");\r\n        e.preventDefault();\r\n\r\n        //fetch for creating account\r\n\r\n        var sendObj = { username: this.state.username, email: this.state.email, password: this.state.password };\r\n\r\n        var me = this;\r\n\r\n        fetch(this.props.action, {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(sendObj)\r\n        })\r\n        .then(function (response) {\r\n            console.log(response);\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                me.props.history.push({\r\n                    pathname: '/NewAccount',\r\n                    state: { msg: \"You have successfully created a new account.\" }\r\n                });\r\n            }\r\n            else if (json.status === STATUS_ERROR) {\r\n                me.setState({ notification: (\"Could not create an account successfully. Try again please. Error: \" + json.error) });\r\n            }\r\n            else {\r\n                console.log(\"Unkown error: \" + json.error);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.state.notification}</p>\r\n                <form className=\"\" onSubmit={this.createAccount}>\r\n                    <label>\r\n                        Username:\r\n                        <input className={this.props.className} type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Email:\r\n                        <input className={this.props.className} type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Password:\r\n                        <input className={this.props.className} type=\"text\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                    </label>\r\n                    <input className={BUTTON_CLASS} type=\"submit\" value=\"Create Account\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass SuccessNewAccountPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.props.location.state.msg}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { SuccessNewAccountPage };\r\nexport default withRouter(CreateAccountForm);","\r\nconst STATUS_OK = \"OK\";\r\nconst STATUS_ERROR = \"error\";\r\nconst BUTTON_CLASS = \"button ripple\";\r\n\r\nexport {STATUS_OK, STATUS_ERROR, BUTTON_CLASS};\r\n","\r\nimport React from 'react';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\n\r\nimport {STATUS_OK, STATUS_ERROR, BUTTON_CLASS} from './Utils';\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { username: \"\", password: \"\", notification: \"\", redirect: false };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    login(e) {\r\n        console.log(\"Log in\");\r\n        e.preventDefault();\r\n\r\n        //fetch for logging in\r\n        var sendObj = { username: this.state.username, password: this.state.password };\r\n        \r\n        var me = this;\r\n\r\n        fetch(this.props.action, {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(sendObj)\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                me.setState( { redirect: true } );\r\n                me.props.history.push({\r\n                                        pathname: '/Home',\r\n                                        state: { skipFirstRender: true }\r\n                                    });\r\n            }\r\n            else if (json.status === STATUS_ERROR) {\r\n                me.setState({ notification: (\"Could not login successfully. Try again please. Error: \" + json.error) });\r\n            }\r\n            else {\r\n                console.log(\"Unkown error: \" + json.error);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // if (this.state.redirect) {\r\n        //     return (\r\n        //             <Redirect to=\"/Home\"/>\r\n        //         );\r\n        // }\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.state.notification}</p>\r\n                <form className=\"\" onSubmit={this.login}>\r\n                    <label>\r\n                        Username:\r\n                        <input className={this.props.className} type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Password:\r\n                        <input className={this.props.className} type=\"text\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                    </label>\r\n                    <input className={BUTTON_CLASS} type=\"submit\" value=\"Login\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LoginForm);\r\n","\r\n\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport {STATUS_OK, STATUS_ERROR, BUTTON_CLASS} from './Utils';\r\n\r\nclass VerifyForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { email: \"\", key: \"\", notification: \"\" };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.verifyAccount = this.verifyAccount.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    verifyAccount(e) {\r\n        console.log(\"Verify Account\");\r\n        e.preventDefault();\r\n\r\n        //fetch for creating account\r\n\r\n        var sendObj = { email: this.state.email, key: this.state.key };\r\n\r\n        var me = this;\r\n\r\n        fetch(this.props.action, {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(sendObj)\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                me.props.history.push({\r\n                    pathname: '/Verify',\r\n                    state: { msg: \"You have successfully verified a new account.\" }\r\n                });\r\n            }\r\n            else if (json.status === STATUS_ERROR) {\r\n                me.setState({ notification: (\"Could not verify an account successfully. Try again please. Error: \" + json.error) });\r\n            }\r\n            else {\r\n                console.log(\"Unkown error: \" + json.error);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.state.notification}</p>\r\n                <form className=\"\" onSubmit={this.verifyAccount}>\r\n                    <label>\r\n                        Email:\r\n                        <input className={this.props.className} type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Key:\r\n                        <input className={this.props.className} type=\"text\" name=\"key\" value={this.state.key} onChange={this.handleChange} />\r\n                    </label>\r\n                    <input className={BUTTON_CLASS} type=\"submit\" value=\"Verify Account\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass VerifyPage extends React.Component {\r\n    render() {\r\n        console.log(\"Hi\");\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.props.location.state.msg}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst verifyForm = withRouter(VerifyForm);\r\n\r\nexport { VerifyPage, verifyForm };\r\n// export default withRouter(VerifyForm);","\r\nimport React from 'react';\r\n\r\nimport LoginForm from './Login';\r\nimport CreateAccountForm from './Accounts';\r\nimport {verifyForm as VerifyForm} from './Verify';\r\n\r\nimport {STATUS_OK} from './Utils';\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n    componentDidMount() {\r\n        var me = this;\r\n        this.props.getLoginStatus()\r\n        .then(function(status) {\r\n            if (status !== me.props.loggedIn) {\r\n                me.props.setLoginState(status);\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Error getting login status: \" + error);\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <CreateAccountForm action=\"/adduser\" />\r\n                <br />\r\n                <br />\r\n                <hr />\r\n                <LoginForm action=\"/login\" />\r\n                <br />\r\n                <br />\r\n                <hr />\r\n                <VerifyForm action=\"/verify\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass LogoutPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {notification: \"\"};\r\n    }\r\n    \r\n    componentDidMount() {\r\n        var me = this;\r\n        fetch(this.props.action, {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            var notification;\r\n            if (json.status === STATUS_OK) {\r\n                notification = \"You have successfully logged out.\";\r\n                // me.props.setLoginState()\r\n                // me.setState({ notification: \"You have successfully logged out.\" });\r\n            }\r\n            else {\r\n                notification = \"Could not logout. Error: \" + json.error;\r\n                // me.setState({ notification: \"Could not logout. Error: \" + json.error});\r\n            }\r\n            me.props.setLoginState(false, notification);\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Error getting logout: \" + error);\r\n            me.props.setLoginState(false, \"Failed to logout.\");\r\n            // me.setState({notification: \"Failed to logout.\"})\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.props.notification}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport { LoginPage, LogoutPage };\r\n","\r\n\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport {STATUS_OK, STATUS_ERROR, BUTTON_CLASS} from './Utils';\r\n\r\n\r\nclass AddQuestionForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {notification: \"\"};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addQuestion = this.addQuestion.bind(this);\r\n    }\r\n\r\n    \r\n    handleChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    addQuestion(e) {\r\n        console.log(\"Add question\");\r\n        e.preventDefault();\r\n\r\n        var tagsArray = this.state.tags.split(\" \");\r\n        \r\n        var sendObj = { title: this.state.title, body: this.state.body, tags: tagsArray };\r\n\r\n        var me = this;\r\n        var success = false;\r\n        var questionId = \"\";\r\n\r\n        fetch(this.props.action, {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(sendObj)\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                success = true;\r\n                questionId = json.id;\r\n            }\r\n            else {\r\n                success = false;\r\n                me.setState({ notification: (\"Could not add question. Try again please. Error: \" + json.error) });\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            success = false;\r\n            console.log(\"Catch: Failed to add question. Error: \" + error);\r\n        })\r\n        .finally(function() {\r\n            if (success) {\r\n                me.props.history.push('/Question/' + questionId);\r\n            }\r\n            else {\r\n                me.setState({notification: \"Could not add question.\"})\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.state.notification}</p>\r\n                <form className=\"\" onSubmit={this.addQuestion}>\r\n                    <label>\r\n                        Title:\r\n                        <input className={this.props.className} type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Body:\r\n                        <textarea className={this.props.className} name=\"body\" value={this.state.body} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Tags:\r\n                        <input className={this.props.className} type=\"text\" name=\"tags\" value={this.state.tags} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <input className={BUTTON_CLASS} type=\"submit\" value=\"Add Question\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nclass QuestionPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {id: 0, user: null, title:\"\", body:\"\", score:0, view_count:0, answer_count:0, timestamp:0,\r\n                        media:null, tags:null, accepted_answer_id:null};\r\n\r\n\r\n        this.answerAdded = this.answerAdded.bind(this);\r\n    }\r\n\r\n    answerAdded() {\r\n        this.setState(this.state);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var questionId = this.props.match.params.id;\r\n\r\n        var me = this;\r\n        fetch('/questions/' + questionId, {\r\n            method: \"GET\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.error == null) {\r\n                console.log(\"JSON.question: \" + json.question);\r\n                me.setState(json.question);\r\n            }\r\n            else {\r\n                me.setState({errorMessage: json.error});\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Failed to get question: \" + error);\r\n            return false;\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        if (this.state.id !== 0) {\r\n            return (\r\n                <div>\r\n                    <p>Question ID: {this.state.id}</p>\r\n                    <p>Title: {this.state.title}</p>\r\n                    <br />\r\n                    <p>{this.state.body}</p>\r\n                    <br />\r\n                    <p>Score: {this.state.score}</p>\r\n                    <p>Views: {this.state.view_count}</p>\r\n                    <p>Posted by: {this.state.user.username}</p>\r\n                    <p>Reputation: {this.state.user.reputation}</p>\r\n                    <p>Time Posted: {this.state.timestamp}</p>\r\n                    {/* <p>Media: {this.state.media}</p> */}\r\n                    <p>Tags: {this.state.tags}</p>\r\n                    <p>Accepted Answer ID: {this.state.accepted_answer_id}</p>\r\n                    <br />\r\n                    <br />\r\n                    <p>Number of answers: {this.state.answer_count}</p>\r\n\r\n                    <br />\r\n                    <hr />\r\n\r\n                    <p>Add answer: </p>\r\n                    <AddAnswerForm action={\"/questions/\" + this.props.match.params.id + \"/answers/add\"} callback={this.answerAdded} />\r\n\r\n                    <br />\r\n                    <hr />\r\n\r\n                    <Answers questionId={this.props.match.params.id} />\r\n\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.state.errorMessage != null) {\r\n            return (\r\n                <div>\r\n                    <p className=\"Notification\">{this.state.errorMessage}</p>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            console.log(\"Hi\");\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nclass Answers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {notification: \"\"};\r\n    }\r\n\r\n    componentDidMount() {\r\n        var success = false;\r\n        var answers;\r\n        var me = this;\r\n        \r\n        let questionId = this.props.questionId;\r\n\r\n        fetch(\"/questions/\" + questionId + \"/answers\", {\r\n            method: \"GET\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            console.log(\"Getting answers\");\r\n            if (json.status === STATUS_OK) {\r\n                success = true;\r\n                answers = json.answers;\r\n                console.log(\"Answers: \" + answers);\r\n            }\r\n            else {\r\n                success = false;\r\n                // me.setState({ notification: (\"Could not get answers for questionId: \" + questionId + \". Error: \" + json.error) });\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            success = false;\r\n            console.log(\"Catch: Failed to get answers. Error: \" + error);\r\n        })\r\n        .finally(function() {\r\n            if (success) {\r\n                me.setState({answers: answers});\r\n            }\r\n            else {\r\n                me.setState({notification: \"No answers to show.\"})\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        var success = false;\r\n        var answers;\r\n        var me = this;\r\n        \r\n        let questionId = this.props.questionId;\r\n\r\n        fetch(\"/questions/\" + questionId + \"/answers\", {\r\n            method: \"GET\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            console.log(\"Getting answers\");\r\n            if (json.status === STATUS_OK) {\r\n                success = true;\r\n                answers = json.answers;\r\n                console.log(\"Answers: \" + answers);\r\n            }\r\n            else {\r\n                success = false;\r\n                // me.setState({ notification: (\"Could not get answers for questionId: \" + questionId + \". Error: \" + json.error) });\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            success = false;\r\n            console.log(\"Catch: Failed to get answers. Error: \" + error);\r\n        })\r\n        .finally(function() {\r\n            if (success) {\r\n                me.setState({answers: answers});\r\n            }\r\n            else {\r\n                me.setState({notification: \"No answers to show.\"})\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.answers) {\r\n            return (\r\n                <div>\r\n                    <p className=\"Notification\">{this.state.notification}</p>\r\n                    {this.state.answers.map((answer) => {\r\n                                        return (\r\n                                            <React.Fragment>\r\n                                            <Answer id={answer.id} body={answer.body} user={answer.user}\r\n                                            score={answer.score} is_accepted={answer.is_accepted} timestamp={answer.timestamp} />\r\n                                            <br />\r\n                                            <hr />\r\n                                            </React.Fragment>\r\n                                        );\r\n                                        } )}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <p className=\"Notification\">{this.state.notification}</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nclass Answer extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <p>{this.props.body}</p>\r\n                <p>Answer ID: {this.props.id}</p>\r\n                <p>Username: {this.props.user}</p>\r\n                <p>Score: {this.props.score}</p>\r\n                <p>Accepted: {this.props.is_accepted}</p>\r\n                <p>Timestamp: {this.props.timestamp}</p>\r\n                {/* <p>Media: {this.props.media}</p> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nclass AddAnswerForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {body:\"\"};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addAnswer = this.addAnswer.bind(this);\r\n    }\r\n    \r\n    handleChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    addAnswer(e) {\r\n        console.log(\"Add answer\");\r\n        e.preventDefault();\r\n        \r\n        var sendObj = { body: this.state.body };\r\n\r\n        var me = this;\r\n        var success = false;\r\n        var answerId = \"\";\r\n\r\n        fetch(this.props.action, {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(sendObj)\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (json.status === STATUS_OK) {\r\n                success = true;\r\n                answerId = json.id;\r\n            }\r\n            else {\r\n                success = false;\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            success = false;\r\n            console.log(\"Catch: Failed to add answer. Error: \" + error);\r\n        })\r\n        .finally(function() {\r\n            if (success) {\r\n                me.props.callback();\r\n            }\r\n            else {\r\n                me.setState({notification: \"Could not add answer.\"})\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"Notification\">{this.state.notification}</p>\r\n                <form className=\"\" onSubmit={this.addAnswer}>\r\n                    <label>\r\n                        Answer:\r\n                        <textarea className={this.props.className} name=\"body\" value={this.state.body} onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <input className={BUTTON_CLASS} type=\"submit\" value=\"Add Answer\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst addQuestionForm = withRouter(AddQuestionForm);\r\n\r\n\r\nexport {QuestionPage, addQuestionForm};\r\n","\r\nimport React from 'react';\r\nimport {addQuestionForm as AddQuestionForm} from './Questions';\r\n\r\nclass QuestionsPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AddQuestionForm action=\"/questions/add\" />\r\n                <br />\r\n                <hr />\r\n                <br />\r\n                {/* <SearchForm action=\"/search\" /> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {QuestionsPage};\r\n","\r\nimport React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport {App} from './App';\r\nimport {Home} from './Home';\r\nimport {NavBar} from './Navigation';\r\nimport {SuccessNewAccountPage} from './Accounts';\r\nimport {LoginPage, LogoutPage} from './LoginPage';\r\nimport {VerifyPage} from './Verify';\r\nimport {QuestionPage} from './Questions';\r\nimport {QuestionsPage} from './QuestionsPage';\r\n\r\nclass LoginStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // fetch request to determine if logged in.\r\n\r\n        this.setLoginState = this.setLoginState.bind(this);\r\n        this.getLoginStatus = this.getLoginStatus.bind(this);\r\n\r\n        this.state = { loggedIn: false, notification: \"\" };\r\n        this.justChanged = false;\r\n    }\r\n\r\n    setLoginState(loggedIn, notification) {\r\n        this.setState( {loggedIn: loggedIn, notification: notification} );\r\n    }\r\n\r\n    getLoginStatus() {\r\n        console.log(\"get login status was called\");\r\n        var me = this;\r\n\r\n        // fetch request to determine if logged in.\r\n        // var status = await \r\n        return fetch('/CheckLoginStatus', {\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function(json) {\r\n            if (me.state.loggedIn !== json.loggedIn) {\r\n                me.justChanged = true;\r\n                me.setState({ loggedIn: json.loggedIn })\r\n            }\r\n            if (json.loggedIn === true) {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Failed to find out if you are logged in: \" + error);\r\n            return false;\r\n        });\r\n\r\n        // console.log(\"STATUS: \" + status);\r\n\r\n        // if (this.state.loggedIn !== status) {\r\n        //     this.justChanged = true;\r\n        //     this.setState({ loggedIn: status })\r\n        // }\r\n        // // this.setState({loggedIn: status});\r\n        // return status;\r\n    }\r\n\r\n    render() {\r\n\r\n        var status = this.state.loggedIn;\r\n        // console.log(\"LoginStatus was rendered.\");\r\n        // let changed = this.justChanged;\r\n        // this.justChanged = false;\r\n        \r\n        // let status;\r\n        // if (!changed) {\r\n        //     console.log(\"HI\");\r\n        //     status = this.getLoginStatus();\r\n        //     console.log(\"BYE\");\r\n        // }\r\n        // else {\r\n        //     status = this.state.loggedIn;\r\n        // }\r\n\r\n        return (\r\n        <React.Fragment>\r\n            <NavBar loggedIn={status} />\r\n            <Route exact path = \"/\" render={ (props) => <App {...props} loggedIn={status} getLoginStatus={this.getLoginStatus} setLoginState={this.setLoginState} /> } />\r\n            <Route path = \"/Home\" render={ (props) => <Home {...props} loggedIn={status} getLoginStatus={this.getLoginStatus} setLoginState={this.setLoginState} /> } />\r\n            <Route path=\"/Search\" render={ (props) => <Home {...props} loggedIn={status} getLoginStatus={this.getLoginStatus} setLoginState={this.setLoginState} /> } />\r\n            <Route path=\"/NewAccount\" render={ (props) => <SuccessNewAccountPage {...props} loggedIn={status} getLoginStatus={this.getLoginStatus} setLoginState={this.setLoginState} />} />\r\n            <Route path=\"/Login\" render={ (props) => <LoginPage {...props} loggedIn={status} getLoginStatus={this.getLoginStatus} setLoginState={this.setLoginState} /> } />\r\n            <Route path=\"/Logout\" render={ (props) => <LogoutPage {...props} action=\"/logout\" notification={this.state.notification} loggedIn={status} getLoginStatus={this.getLoginStatus} setLoginState={this.setLoginState} /> } />\r\n            <Route path=\"/Verify\" component={VerifyPage} />\r\n            <Route path=\"/Questions\" component={QuestionsPage} />\r\n            <Route path=\"/Question/:id\" component={QuestionPage} />\r\n        </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport {LoginStatus};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport {App} from './App.js';\nimport {NavBar} from './Navigation.js';\nimport {Home} from './Home';\nimport {LoginStatus} from './Routes';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\n\nReactDOM.render((\n    <Router>\n        <div>\n            <LoginStatus />\n        </div>\n    </Router>\n ), document.getElementById('root'));\n\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}